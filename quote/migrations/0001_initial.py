# Generated by Django 5.0.6 on 2024-05-26 12:03

import common.utils.file_upload_paths
import common.validators.image_pdf_extension_validator
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuoteOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('delivery_date', models.DateField()),
                ('payment_type', models.CharField(max_length=255, verbose_name='Payment Type')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('D', 'Denied')], default='P', max_length=2)),
                ('invoice_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('delivery_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.address', verbose_name='Delivery Address')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Supplier')),
            ],
        ),
        migrations.CreateModel(
            name='OfferProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('quantity', models.PositiveBigIntegerField(verbose_name='Quantity')),
                ('unit', models.CharField(choices=[('bag', 'Bag / Bags'), ('barrel', 'Barrel / Barrels'), ('bushel', 'Bushel / Bushels'), ('cubic', 'Cubic Meter / Cubic Meters'), ('dozen', 'Dozen / Dozens'), ('gallon', 'Gallon / Gallons'), ('gram', 'Gram / Grams'), ('kilogram', 'Kilogram / Kilograms'), ('kilometer', 'Kilometer / Kilometers'), ('long', 'Long Ton / Long Tons'), ('meter', 'Meter / Meters'), ('metric', 'Metric Ton / Metric Tons'), ('ounce', 'Ounce / Ounces'), ('pair', 'Pair / Pairs'), ('pack', 'Pack / Packs'), ('piece', 'Piece / Pieces'), ('pound', 'Pound / Pounds'), ('set', 'Set / Sets'), ('short', 'Short Ton / Short Tons'), ('square', 'Square Meter / Square Meters'), ('ton', 'Ton / Tons')], max_length=50, verbose_name='Unit')),
                ('product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price (Per Product)')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=3, null=True, verbose_name='TAX')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.quoteoffer')),
            ],
        ),
        migrations.CreateModel(
            name='QuoteRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quote_requests_as_supplier', to=settings.AUTH_USER_MODEL, verbose_name='Target Supplier')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
        ),
        migrations.CreateModel(
            name='QuoteProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('quantity', models.PositiveBigIntegerField(verbose_name='Quantity')),
                ('unit', models.CharField(choices=[('bag', 'Bag / Bags'), ('barrel', 'Barrel / Barrels'), ('bushel', 'Bushel / Bushels'), ('cubic', 'Cubic Meter / Cubic Meters'), ('dozen', 'Dozen / Dozens'), ('gallon', 'Gallon / Gallons'), ('gram', 'Gram / Grams'), ('kilogram', 'Kilogram / Kilograms'), ('kilometer', 'Kilometer / Kilometers'), ('long', 'Long Ton / Long Tons'), ('meter', 'Meter / Meters'), ('metric', 'Metric Ton / Metric Tons'), ('ounce', 'Ounce / Ounces'), ('pair', 'Pair / Pairs'), ('pack', 'Pack / Packs'), ('piece', 'Piece / Pieces'), ('pound', 'Pound / Pounds'), ('set', 'Set / Sets'), ('short', 'Short Ton / Short Tons'), ('square', 'Square Meter / Square Meters'), ('ton', 'Ton / Tons')], max_length=50, verbose_name='Unit')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.quoterequest')),
            ],
        ),
        migrations.AddField(
            model_name='quoteoffer',
            name='quote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.quoterequest', verbose_name='Target Quote'),
        ),
        migrations.CreateModel(
            name='QuoteAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to=common.utils.file_upload_paths.quote_files_path, validators=[common.validators.image_pdf_extension_validator.image_pdf_extension_validator], verbose_name='Attachment')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.quoterequest', verbose_name='Related Quote')),
            ],
        ),
    ]
